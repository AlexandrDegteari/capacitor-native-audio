{
  "api": {
    "name": "NativeAudio",
    "slug": "nativeaudio",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "configure",
        "signature": "(options: ConfigureOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "ConfigureOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "ConfigureOptions"
        ],
        "slug": "configure"
      },
      {
        "name": "preload",
        "signature": "(options: PreloadOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "PreloadOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PreloadOptions"
        ],
        "slug": "preload"
      },
      {
        "name": "play",
        "signature": "(options: { assetId: string; time: number; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ assetId: string; time: number; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "play"
      },
      {
        "name": "pause",
        "signature": "(options: { assetId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ assetId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "pause"
      },
      {
        "name": "resume",
        "signature": "(options: { assetId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ assetId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "resume"
      },
      {
        "name": "loop",
        "signature": "(options: { assetId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ assetId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "loop"
      },
      {
        "name": "stop",
        "signature": "(options: { assetId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ assetId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "stop"
      },
      {
        "name": "unload",
        "signature": "(options: { assetId: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ assetId: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "unload"
      },
      {
        "name": "setVolume",
        "signature": "(options: { assetId: string; volume: number; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ assetId: string; volume: number; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "setvolume"
      },
      {
        "name": "getCurrentTime",
        "signature": "(options: { assetId: string; }) => Promise<{ currentTime: number; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ assetId: string; }"
          }
        ],
        "returns": "Promise<{ currentTime: number; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getcurrenttime"
      },
      {
        "name": "getDuration",
        "signature": "(options: { assetId: string; }) => Promise<{ duration: number; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ assetId: string; }"
          }
        ],
        "returns": "Promise<{ duration: number; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getduration"
      },
      {
        "name": "isPlaying",
        "signature": "(options: { assetId: string; }) => Promise<{ isPlaying: boolean; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ assetId: string; }"
          }
        ],
        "returns": "Promise<{ isPlaying: boolean; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "isplaying"
      },
      {
        "name": "playQueue",
        "signature": "(options: { id: string; tracks: QueueTrack[]; startIndex: number; startTime: number; trailingTime: number; timerUpdateInterval: number; volume: number; useFade: boolean; loop: boolean; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ id: string; tracks: QueueTrack[]; startIndex: number; startTime: number; trailingTime: number; timerUpdateInterval: number; volume: number; useFade: boolean; loop: boolean; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "QueueTrack"
        ],
        "slug": "playqueue"
      },
      {
        "name": "pauseQueue",
        "signature": "(options: { id: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ id: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "pausequeue"
      },
      {
        "name": "resumeQueue",
        "signature": "(options: { id: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ id: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "resumequeue"
      },
      {
        "name": "isQueuePlaying",
        "signature": "(options: { id: string; }) => Promise<{ isQueuePlaying: boolean; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ id: string; }"
          }
        ],
        "returns": "Promise<{ isQueuePlaying: boolean; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "isqueueplaying"
      },
      {
        "name": "isQueuePaused",
        "signature": "(options: { id: string; }) => Promise<{ isQueuePaused: boolean; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ id: string; }"
          }
        ],
        "returns": "Promise<{ isQueuePaused: boolean; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "isqueuepaused"
      },
      {
        "name": "seekQueue",
        "signature": "(options: { id: string; time: number; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ id: string; time: number; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "seekqueue"
      },
      {
        "name": "playNextQueueTrack",
        "signature": "(id: string) => Promise<void>",
        "parameters": [
          {
            "name": "id",
            "docs": "",
            "type": "string"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "playnextqueuetrack"
      },
      {
        "name": "playPreviousQueueTrack",
        "signature": "(id: string) => Promise<void>",
        "parameters": [
          {
            "name": "id",
            "docs": "",
            "type": "string"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "playpreviousqueuetrack"
      },
      {
        "name": "getQueueTrackCurrentTime",
        "signature": "(id: string) => Promise<number>",
        "parameters": [
          {
            "name": "id",
            "docs": "",
            "type": "string"
          }
        ],
        "returns": "Promise<number>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getqueuetrackcurrenttime"
      },
      {
        "name": "getQueuePlayingIndex",
        "signature": "(options: { id: string; }) => Promise<number>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ id: string; }"
          }
        ],
        "returns": "Promise<number>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getqueueplayingindex"
      },
      {
        "name": "setQueueLoopIndex",
        "signature": "(options: { id: string; index: number; set: boolean; }) => Promise<number>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ id: string; index: number; set: boolean; }"
          }
        ],
        "returns": "Promise<number>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "setqueueloopindex"
      },
      {
        "name": "setQueueVolume",
        "signature": "(options: { id: string; volume: number; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ id: string; volume: number; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "setqueuevolume"
      },
      {
        "name": "queueHasTrackWith",
        "signature": "(options: { id: string; url: string; }) => Promise<{ has: boolean; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ id: string; url: string; }"
          }
        ],
        "returns": "Promise<{ has: boolean; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "queuehastrackwith"
      },
      {
        "name": "unloadQueue",
        "signature": "(options: { id: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ id: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "unloadqueue"
      },
      {
        "name": "setSleepTimer",
        "signature": "(options: { time: number; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ time: number; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "setsleeptimer"
      },
      {
        "name": "cancelSleepTimer",
        "signature": "(options: {}) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{}"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "cancelsleeptimer"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "ConfigureOptions",
      "slug": "configureoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "fade",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "focus",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean | undefined"
        }
      ]
    },
    {
      "name": "PreloadOptions",
      "slug": "preloadoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "assetPath",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "assetId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "volume",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "audioChannelNum",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "isUrl",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean | undefined"
        }
      ]
    },
    {
      "name": "QueueTrack",
      "slug": "queuetrack",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "url",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "name",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "isMusic",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}